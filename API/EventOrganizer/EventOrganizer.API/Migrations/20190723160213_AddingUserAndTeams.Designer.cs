// <auto-generated />
using System;
using EventOrganizer.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EventOrganizer.API.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20190723160213_AddingUserAndTeams")]
    partial class AddingUserAndTeams
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EventOrganizer.Model.Picture", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt");

                    b.Property<long>("IdFromPlat");

                    b.Property<string>("PictureUrl");

                    b.Property<bool>("Removed");

                    b.Property<string>("Text");

                    b.Property<long?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Pictures");
                });

            modelBuilder.Entity("EventOrganizer.Model.Team", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("EventOrganizer.Model.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Password");

                    b.Property<string>("Token");

                    b.Property<long?>("UserTeamId");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.HasIndex("UserTeamId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("EventOrganizer.Model.UserPicture", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("IdFromPlat");

                    b.Property<string>("Name");

                    b.Property<string>("UserProfilePictureUrl");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("UserPictures");
                });

            modelBuilder.Entity("EventOrganizer.Model.Picture", b =>
                {
                    b.HasOne("EventOrganizer.Model.UserPicture", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("EventOrganizer.Model.User", b =>
                {
                    b.HasOne("EventOrganizer.Model.Team", "UserTeam")
                        .WithMany("Users")
                        .HasForeignKey("UserTeamId");
                });
#pragma warning restore 612, 618
        }
    }
}
